{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{371:function(e,t,a){\"use strict\";a.r(t);var n=a(43),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"routes\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#routes\"}},[e._v(\"#\")]),e._v(\" Routes\")]),e._v(\" \"),a(\"p\",[e._v(\"The only stock route file modified is routes\\\\web.php\")]),e._v(\" \"),a(\"p\",[e._v(\"Lets look at web.php, line by line:\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[e._v(\"Route::get('lang/{lang}', 'LanguageController@swap');\\n\")])])]),a(\"p\",[e._v(\"The first line gets envoked anytime the user chooses a language from the language picker dropdown. The LanguageController's swap method switches the language code in the session and refreshes the page for it to take effect.\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[e._v(\"Route::group(['namespace' => 'Frontend', 'as' => 'frontend.'], function () {\\n\\tincludeRouteFiles(__DIR__ . '/frontend/');\\n});\\n\")])])]),a(\"ul\",[a(\"li\",[e._v(\"This section registers all of the frontend routes, such as login, register, etc.\")]),e._v(\" \"),a(\"li\",[e._v(\"The namespaces of the routes indicate the folder structure. In the above case the routes that will be included live in routes\\\\frontend.\")]),e._v(\" \"),a(\"li\",[e._v(\"The as property prepends the value to all routes inside the closure, so in the above case all included route names will be prepended with frontend.\")]),e._v(\" \"),a(\"li\",[e._v(\"The \"),a(\"code\",[e._v(\"includeRouteFiles()\")]),e._v(\" is a helper function located in app\\\\helpers.php and autoloaded by composer.\")])]),e._v(\" \"),a(\"p\",[e._v(\"This takes all files in the specified directory and includes them in the closure so you can add new routes without having to touch the web.php routes file.\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[e._v(\"Route::group(['namespace' => 'Backend', 'prefix' => 'admin', 'as' => 'admin.', 'middleware' => 'admin'], function () {\\n\\tincludeRouteFiles(__DIR__ . '/backend/');\\n});\\n\")])])]),a(\"ul\",[a(\"li\",[e._v(\"This section registers all of the backend routes, such as admin dashboard, user management, etc.\")]),e._v(\" \"),a(\"li\",[e._v(\"It is nearly identical as the frontend routes with the addition of the admin middleware and prefix.\")]),e._v(\" \"),a(\"li\",[e._v(\"The namespaces of the routes indicate the folder structure. In the above case the routes that will be included live in routes\\\\backend.\")]),e._v(\" \"),a(\"li\",[e._v(\"The as property prepends the value to all routes inside the closure, so in the above case all included route names will be prepended with admin.\")]),e._v(\" \"),a(\"li\",[e._v(\"The prefix property prepends the value before all of the URL's of the routes inside the closure, so in the above case all route URL's will be prepended with admin/.\")]),e._v(\" \"),a(\"li\",[e._v(\"The admin middleware is specified in app\\\\Http\\\\Kernel.php and states that anyone trying to access the routes in the following closure must:\\n\"),a(\"ul\",[a(\"li\",[a(\"em\",[e._v(\"Be logged in.\")])]),e._v(\" \"),a(\"li\",[a(\"em\",[e._v(\"Have the view-backend permission associated with one of their roles or by itself.\")])])])])]),e._v(\" \"),a(\"p\",[e._v(\"Note: Most route resources use Laravel's Route/Model Binding which you will see as well in the controller methods.\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[e._v(\"// Client Management - with needed permissions\\nRoute::group(['middleware' => 'role:'.config('access.users.admin_role')], function () {\\n\\n    // Client CRUD \\n    Route::get('clients-management', [ClientController::class, 'management'])->name('clients-management.index');\\n    Route::patch('clients/{client}', 'ClientController@update')->name('update');\\n    Route::post('categoryTag', [ClientController::class, 'categoryTag'])->name('clients.categoryTag');\\n\\n    // Categories & Tags Management\\n    Route::get('categories-tags', function () {\\n        return view('backend/categories-tags');\\n    })->name('categories-tags.index');\\n\\n    // Categories\\n    Route::get('api/categories', [CategoryController::class, 'index'])->name('api/categories.index');\\n    Route::post('api/categories', [CategoryController::class, 'store'])->name('api/categories.store');\\n    Route::patch('api/update/categories', [CategoryController::class, 'update'])->name('api/categories.update');\\n    Route::delete('api/categories/{category}', [CategoryController::class, 'destroy'])->name('api/categories.destroy');\\n\\n    // Tags\\n    Route::get('api/tags', [TagController::class, 'index'])->name('api/tags.index');\\n    Route::post('api/tags', [TagController::class, 'store'])->name('api/tags.store');\\n    Route::patch('api/update/tags', [TagController::class, 'update'])->name('api/tags.update');\\n    Route::delete('api/tags/{tag}', [TagController::class, 'destroy'])->name('api/tags.destroy');\\n});\\n\")])])]),a(\"p\",[e._v(\"This section registers routes, such as cient management, route for updating the client info, getting the categories and tags after updating client info, route for categories & tags view and routes for CRUD for both etc.\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",[a(\"code\",[e._v(\"Route::group(['middleware' => 'auth'], function () {\\n\\n    // Client CRUD\\n    Route::get('clients', [ClientController::class, 'index'])->name('clients.index');\\n    Route::get('filter-clients', [ClientController::class, 'filterClients'])->name('clients.filterClients');\\n\\n    /* Charts APi */\\n    Route::get('admin/api/city', 'ChartController@clientsByCity');\\n    Route::get('admin/api/gender', 'ChartController@clientsByGender');\\n    Route::get('admin/api/top-ten', 'ChartController@topTen');\\n    Route::get('admin/api/age', 'ChartController@clientsByAge');\\n\\tRoute::get('admin/api/estimate', 'ChartController@estimateByCategory');\\n});\\n\")])])]),a(\"p\",[e._v(\"This section registers routes, such as route for view/list cients, route for filter the clients data, and routes for axios reguests from Chart components shown on Dashboard page.\")])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}